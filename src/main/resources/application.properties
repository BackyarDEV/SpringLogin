spring.main.allow-bean-definition-overriding = true
debug = false
## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/authexample?useSSL=false&serverTimezone=IST&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=root

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Github OAuth2
github.client.clientId = 01927e6898df4656d06e
github.client.clientSecret = 3cca04e313fede3871785ff1c2b61f1883f71eb1
github.client.accessTokenUri  =  https://github.com/login/oauth/access_token
github.client.userAuthorizationUri  =  https://github.com/login/oauth/authorize
github.client.clientAuthenticationScheme = form
github.resource.userInfoUri  =  https://api.github.com/user
github.resource.preferTokenInfo = false

# Google OAuth2
google.client.clientId = 968230829910-1khtsc40m1kns3c9f2badd0evts2p9gr.apps.googleusercontent.com
google.client.clientSecret = 44ph34yzlwkkQWrEK_0MpkHK
google.client.accessTokenUri  =  https://www.googleapis.com/oauth2/v3/token
google.client.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/auth
google.client.tokenName = oauth_token
google.client.authenticationScheme = query
google.client.clientAuthenticationScheme = form
google.client.scope = profile email
google.resource.userInfoUri  =  https://www.googleapis.com/userinfo/v2/me
google.resource.preferTokenInfo = false